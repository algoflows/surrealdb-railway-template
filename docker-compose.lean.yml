version: '3.8'

# SurrealDB Lean Cluster - Start Small, Scale Smart
# 
# Minimal 3-node setup: 1 PD + 1 TiKV + 1 SurrealDB
# Cost: ~$10-15/month to start
# Scales automatically via Railway dashboard

services:
  # Single PD node (can add pd1, pd2 later)
  pd0:
    image: pingcap/pd:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --name=pd0
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd0:2379
      - --advertise-peer-urls=http://pd0:2380
      - --initial-cluster=pd0=http://pd0:2380
      - --data-dir=/data/pd0
      - --log-level=${PD_LOG_LEVEL:-info}
      - --log-format=json
      - --lease=3
      - --enable-grpc-gateway=true
    deploy:
      resources:
        limits:
          memory: 256M    # Lean start
          cpus: '0.25'    # Lean start
        reservations:
          memory: 128M
          cpus: '0.1'
    volumes:
      - pd0_data:/data
    restart: unless-stopped
    healthcheck:
      test: /pd-ctl health | jq -e ".[] | select(.name == \"$(hostname)\").health"
      start_period: 10s
      retries: 5
      timeout: 10s
      interval: 30s

  # Single TiKV node (can add tikv1, tikv2 later)
  tikv0:
    image: pingcap/tikv:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv0:20160
      - --status-addr=0.0.0.0:20180
      - --data-dir=/data/tikv0
      - --pd=pd0:2379
      - --log-level=${TIKV_LOG_LEVEL:-info}
      - --log-format=json
      - --config-check-interval=10s
      - --grpc-concurrency=2    # Lean start
      - --grpc-concurrent-stream=512    # Lean start
    deploy:
      resources:
        limits:
          memory: 512M    # Lean start
          cpus: '0.5'     # Lean start
        reservations:
          memory: 256M
          cpus: '0.25'
    volumes:
      - tikv0_data:/data
    depends_on:
      pd0:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: /tikv-ctl --host $(hostname):20160 metrics
      start_period: 15s
      retries: 5
      timeout: 10s
      interval: 30s

  # SurrealDB query engine (Railway can autoscale replicas)
  surrealdb:
    image: surrealdb/surrealdb:latest
    environment:
      - PORT=8000
      - SURREAL_USER=${SURREAL_USER:-root}
      - SURREAL_PASS=${SURREAL_PASS:-root}
      - RAILWAY_STATIC_URL
    ports:
      - "${PORT:-8000}:8000"
    command:
      - start
      - --log=${SURREAL_LOG_LEVEL:-info}
      - --user=${SURREAL_USER:-root}
      - --pass=${SURREAL_PASS:-root}
      - --bind=0.0.0.0:8000
      - --query-timeout=30s
      - --transaction-timeout=10s
      - tikv://pd0:2379
    deploy:
      resources:
        limits:
          memory: 1G      # Lean start
          cpus: '1.0'     # Lean start
        reservations:
          memory: 512M
          cpus: '0.5'
    depends_on:
      tikv0:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      start_period: 20s
      retries: 5
      timeout: 10s
      interval: 30s

volumes:
  pd0_data:
  tikv0_data:

# Scaling Instructions:
# 1. Start with this lean setup (~$10-15/month)
# 2. Scale SurrealDB replicas via Railway dashboard (horizontal scaling)
# 3. Add pd1, pd2 services when you need HA (copy pd0 config, change names)
# 4. Add tikv1, tikv2 services when you need more storage (copy tikv0 config, change names)
# 5. Increase resource limits via Railway dashboard (vertical scaling)
