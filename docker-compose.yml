version: '3.8'

# SurrealDB Optimized HA - Full High Availability at Reasonable Cost
#
# 7 services: 3 PD + 3 TiKV + 1 SurrealDB
# Cost: ~$46-62/month (vs $72-98 for heavy HA)
# True HA: Any single node can fail without downtime

services:
  # PD Cluster - 3 lean nodes for consensus
  pd0:
    image: pingcap/pd:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --name=pd0
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd0:2379
      - --advertise-peer-urls=http://pd0:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd0
      - --log-level=${PD_LOG_LEVEL:-info}
      - --log-format=json
      - --lease=3
      - --enable-grpc-gateway=true
    deploy:
      resources:
        limits:
          memory: 256M # Lean but sufficient for coordination
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    volumes:
      - pd0_data:/data
    restart: unless-stopped
    healthcheck:
      test: /pd-ctl health | jq -e ".[] | select(.name == \"$(hostname)\").health"
      start_period: 10s
      retries: 5
      timeout: 10s
      interval: 30s

  pd1:
    image: pingcap/pd:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --name=pd1
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd1:2379
      - --advertise-peer-urls=http://pd1:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd1
      - --log-level=${PD_LOG_LEVEL:-info}
      - --log-format=json
      - --lease=3
      - --enable-grpc-gateway=true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    volumes:
      - pd1_data:/data
    restart: unless-stopped
    healthcheck:
      test: /pd-ctl health | jq -e ".[] | select(.name == \"$(hostname)\").health"
      start_period: 10s
      retries: 5
      timeout: 10s
      interval: 30s

  pd2:
    image: pingcap/pd:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --name=pd2
      - --client-urls=http://0.0.0.0:2379
      - --peer-urls=http://0.0.0.0:2380
      - --advertise-client-urls=http://pd2:2379
      - --advertise-peer-urls=http://pd2:2380
      - --initial-cluster=pd0=http://pd0:2380,pd1=http://pd1:2380,pd2=http://pd2:2380
      - --data-dir=/data/pd2
      - --log-level=${PD_LOG_LEVEL:-info}
      - --log-format=json
      - --lease=3
      - --enable-grpc-gateway=true
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    volumes:
      - pd2_data:/data
    restart: unless-stopped
    healthcheck:
      test: /pd-ctl health | jq -e ".[] | select(.name == \"$(hostname)\").health"
      start_period: 10s
      retries: 5
      timeout: 10s
      interval: 30s

  # TiKV Cluster - 3 lean nodes for storage replication
  tikv0:
    image: pingcap/tikv:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv0:20160
      - --status-addr=0.0.0.0:20180
      - --data-dir=/data/tikv0
      - --pd=pd0:2379,pd1:2379,pd2:2379
      - --log-level=${TIKV_LOG_LEVEL:-info}
      - --log-format=json
      - --config-check-interval=10s
      - --grpc-concurrency=2 # Lean but functional
      - --grpc-concurrent-stream=512
    deploy:
      resources:
        limits:
          memory: 512M # Lean storage nodes
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    volumes:
      - tikv0_data:/data
    depends_on:
      pd0:
        condition: service_healthy
      pd1:
        condition: service_healthy
      pd2:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: /tikv-ctl --host $(hostname):20160 metrics
      start_period: 15s
      retries: 5
      timeout: 10s
      interval: 30s

  tikv1:
    image: pingcap/tikv:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv1:20160
      - --status-addr=0.0.0.0:20180
      - --data-dir=/data/tikv1
      - --pd=pd0:2379,pd1:2379,pd2:2379
      - --log-level=${TIKV_LOG_LEVEL:-info}
      - --log-format=json
      - --config-check-interval=10s
      - --grpc-concurrency=2
      - --grpc-concurrent-stream=512
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    volumes:
      - tikv1_data:/data
    depends_on:
      pd0:
        condition: service_healthy
      pd1:
        condition: service_healthy
      pd2:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: /tikv-ctl --host $(hostname):20160 metrics
      start_period: 15s
      retries: 5
      timeout: 10s
      interval: 30s

  tikv2:
    image: pingcap/tikv:v8.5.0
    environment:
      - RAILWAY_STATIC_URL
    command:
      - --addr=0.0.0.0:20160
      - --advertise-addr=tikv2:20160
      - --status-addr=0.0.0.0:20180
      - --data-dir=/data/tikv2
      - --pd=pd0:2379,pd1:2379,pd2:2379
      - --log-level=${TIKV_LOG_LEVEL:-info}
      - --log-format=json
      - --config-check-interval=10s
      - --grpc-concurrency=2
      - --grpc-concurrent-stream=512
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    volumes:
      - tikv2_data:/data
    depends_on:
      pd0:
        condition: service_healthy
      pd1:
        condition: service_healthy
      pd2:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: /tikv-ctl --host $(hostname):20160 metrics
      start_period: 15s
      retries: 5
      timeout: 10s
      interval: 30s

  # SurrealDB query engine (can scale replicas via Railway dashboard)
  surrealdb:
    image: surrealdb/surrealdb:latest
    environment:
      - PORT=8000
      - SURREAL_USER=${SURREAL_USER:-root}
      - SURREAL_PASS=${SURREAL_PASS:-root}
      - SURREAL_NS=${SURREAL_NS:-app}
      - SURREAL_DB=${SURREAL_DB:-app}
      - RAILWAY_STATIC_URL
    ports:
      - '${PORT:-8000}:8000'
    command:
      - start
      - --log=${SURREAL_LOG_LEVEL:-info}
      - --user=${SURREAL_USER:-root}
      - --pass=${SURREAL_PASS:-root}
      - --ns=${SURREAL_NS:-app}
      - --db=${SURREAL_DB:-app}
      - --bind=0.0.0.0:8000
      - --query-timeout=30s
      - --transaction-timeout=10s
      - tikv://pd0:2379,pd1:2379,pd2:2379
    deploy:
      resources:
        limits:
          memory: 1G # Lean but sufficient for most workloads
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    depends_on:
      tikv0:
        condition: service_healthy
      tikv1:
        condition: service_healthy
      tikv2:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:8000/health || exit 1']
      start_period: 20s
      retries: 5
      timeout: 10s
      interval: 30s

volumes:
  pd0_data:
  pd1_data:
  pd2_data:
  tikv0_data:
  tikv1_data:
  tikv2_data:
# Railway Volume Limits (as of 2024):
# - Free/Trial: 0.5GB per volume
# - Hobby: 5GB per volume
# - Pro/Team: 50GB per volume (expandable to 250GB via support)
#
# IMPORTANT: Each service gets ONE volume, resizing requires downtime
# Pro users can request expansion beyond 250GB via Railway support
#
# Our template uses 6 volumes total:
# - 3 PD volumes (coordination data, small usage)
# - 3 TiKV volumes (your actual database data)
#
# Recommended Railway Plan: Pro ($20/month) for 50GB volumes
# Optimized HA Benefits:
# ✅ Full high availability - any single node can fail
# ✅ Reasonable cost - ~$46-62/month vs $72-98 for heavy HA
# ✅ Production ready - handles 1K-5K concurrent users
# ✅ Scalable - increase resources via Railway dashboard as needed
# ✅ True 3x replication - your data is safe
#
# Scale up resources when you need more performance:
# - Increase memory/CPU limits via Railway dashboard
# - Add SurrealDB replicas for query performance
# - This gives you the foundation to scale to enterprise levels
